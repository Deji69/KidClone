#include <Source/pch.h>
#include <Tests/Setup.h>
#include <Source/Engine/Engine.h>
#include <Source/Engine/Image.h>
#include <sstream>

const vector<uint8> png = {
	0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x08, 0x06, 0x00, 0x00, 0x00, 0xC4, 0x0F, 0xBE, 0x8B, 0x00, 0x00, 0x00, 0x04, 0x73, 0x42, 0x49, 0x54, 0x08, 0x08, 0x08, 0x08, 0x7C, 0x08, 0x64, 0x88, 0x00, 0x00, 0x00, 0x3E, 0x49, 0x44, 0x41, 0x54, 0x18, 0x95, 0x85, 0x8D, 0x41, 0x0A, 0xC0, 0x30, 0x10, 0x02, 0x67, 0xF3, 0x71, 0xFB, 0xF3, 0xC9, 0x21, 0x39, 0x14, 0xDA, 0x6C, 0x04, 0x51, 0x41, 0xB4, 0x04, 0x69, 0x50, 0x78, 0x2B, 0x60, 0x5B, 0xC0, 0xA0, 0xE2, 0x49, 0x89, 0x18, 0x11, 0xE3, 0x9F, 0x2F, 0x51, 0x78, 0xF6, 0xDE, 0x57, 0x47, 0xFB, 0x0F, 0x40, 0xD6, 0x5D, 0x50, 0xB2, 0xF8, 0xCE, 0x13, 0x00, 0xA5, 0x48, 0xB6, 0x8A, 0xAE, 0x81, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82
};

class ImageTest : public EngineTest
{ };

TEST(ImageTest, LoadImageFromMemory) {
	static const vector<uint32> expectedPixels = {
		0xFF0000FF, 0xFF0000FF, 0xFF0000FF, 0xFF0000FF, 0xFF0000FF, 0xFF0000FF, 0xFF0000FF, 0xFF0000FF,
		0xFF00FF00, 0xFF00FF00, 0xFF00FF00, 0xFF00FF00, 0xFF00FF00, 0xFF00FF00, 0xFF00FF00, 0xFF00FF00,
		0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000,
		0xFF007FFF, 0xFF00FFFF, 0xFF007FFF, 0xFF00FFFF, 0xFF007FFF, 0xFF00FFFF, 0xFF007FFF, 0xFF00FFFF,

		0xFF00FF7F, 0xFF00FF7F, 0xFF7FFF00, 0xFF00FF7F, 0xFF00FF7F, 0xFF7FFF00, 0xFF00FF7F, 0xFF00FF7F,
		0xFFFF00FF, 0xFF7F00FF, 0xFF7F00FF, 0xFFFF00FF, 0xFFFF00FF, 0xFF7F00FF, 0xFF7F00FF, 0xFFFF00FF,
		0xFFFF00FF, 0xFF7F00FF, 0xFF7F00FF, 0xFFFF00FF, 0xFFFF00FF, 0xFF7F00FF, 0xFF7F00FF, 0xFFFF00FF,
		0xFFFF7F00, 0xFFFF007F, 0xFFFF007F, 0xFFFF7F00, 0xFFFF7F00, 0xFFFF007F, 0xFFFF007F, 0xFFFF7F00
	};
	Image image;
	image.loadFromMemory(png);
	ASSERT_EQ(image.getSize(), Vector2u(8, 8))
		<< "Assert that the image size is 8x8";
	ASSERT_THAT(image.getPixelsVec(), testing::ContainerEq(expectedPixels));
}

TEST(ImageTest, LoadImageFromFileReportsFailure) {
	Image image;

	// check the correct error is reported for a missing file
	constexpr auto&& expectedError = "Failed to load image file \"thisShouldNotExist.jpg\": could not open file\n";
	ASSERT_FALSE(image.loadFromFile("thisShouldNotExist.jpg"))
		<< "Assert that \"thisShouldNotExist.jpg\" does not exist";
	ASSERT_EQ(testLog.lastLog, expectedError);
}
